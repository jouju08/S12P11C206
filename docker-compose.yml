networks:
  app-network:
    driver: bridge

services:
  # backend
  backend:
    build: ./backend
    ports:
      - "${SPRING_PORT}:${SPRING_PORT}"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    environment:
      - SPRING_DB_URL=${SPRING_DB_URL}
      - SPRING_DB_USERNAME=${SPRING_DB_USERNAME}
      - SPRING_DB_PASSWORD=${SPRING_DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_EXPIRE_TIME=${REDIS_EXPIRE_TIME}
      - SPRING_MAIL_HOST=${SPRING_MAIL_HOST}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      - SPRING_MAIL_PORT=${SPRING_MAIL_PORT}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_S3_ACCESS=${AWS_S3_ACCESS}
      - AWS_S3_SECRET=${AWS_S3_SECRET}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - SPRING_PORT=${SPRING_PORT}
      - FRONT_PORT=${FRONT_PORT}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
  # frontend
  frontend:
    build: ./frontend
    ports:
      - "${FRONT_PORT}:80"
    networks:
      - app-network

  # redis
  redis:
    image: redis:6.2.6-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    networks:
      - app-network

  # mysql
  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Seoul
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  # nginx
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./data/certbot:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - app-network

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    restart: unless-stopped
    volumes:
      - ./data/certbot:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  mysql-data:
  redis-data:
