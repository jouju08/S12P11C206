networks:
  app-network:
    driver: bridge

services:
  # backend
  backend:
    build: ./backend
    ports:
      - "${SPRING_PORT}:${SPRING_PORT}"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    env_file:
      - ./config/backend.env

  # frontend
  # frontend:
    # build: ./frontend
    # ports:
    #   - "${FRONT_PORT}:2828"
    # volumes:
    #   - /home/ubuntu/MyFairy/frontend/dist:/app/dist
    # networks:
    #   - app-network
    # env_file:
    #   - ./config/frontend.env
    # command: npm run build

  # redis
  redis:
    image: redis:6.2.6-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network

  # mysql
  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    env_file:
      - ./config/etc.env
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  # nginx
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "2828:2828"
      - "443:443"
    depends_on:
      # - frontend
      - backend
    volumes:
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/mime.types:/etc/nginx/mime.types:ro
      # - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
      # - /home/ubuntu/MyFairy/frontend/dist:/usr/share/nginx/html:ro
    env_file:
      - ./config/frontend.env
    networks:
      - app-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    restart: unless-stopped
    depends_on:
      - nginx
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  ai:
    build: ./AI
    ports:
      - "8000:8000"
    networks:
      - app-network
    env_file:
      - ./config/AI.env

volumes:
  mysql-data:
