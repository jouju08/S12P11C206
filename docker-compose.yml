version: "3.8"

networks:
  app-network:
    driver: bridge

services:
#  # openvidu
#  openvidu:
#    image: openvidu/openvidu-dev:2.31.0
#    ports:
#      - "4443:4443"
#    environment:
#      - OPENVIDU_SECRET=MY_SECRET
#      - OPENVIDU_RECORDING=true
#      - OPENVIDU_RECORDING_PATH=/opt/openvidu/recordings
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /opt/openvidu/recordings:/opt/openvidu/recordings
#    networks:
#      - app-network

  # backend
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/myfairy
      - SPRING_DATASOURCE_USERNAME=ssafy
      - SPRING_DATASOURCE_PASSWORD=ssafy
      - SPRING_REDIS_HOST=redis
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
  # frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    networks:
      - app-network
  # redis
  redis:
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    networks:
      - app-network

  # mysql
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=0000
      - MYSQL_DATABASE=myfairy
      - TZ=Asia/Seoul
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  # nginx
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - openvidu
    networks:
      - app-network

volumes:
  mysql-data:
  redis-data:
