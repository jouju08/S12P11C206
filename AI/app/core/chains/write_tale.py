from langchain_core.prompts import ChatPromptTemplate
from app.core.chains.NumberdListParser import Parser as NumberdListParser
from langchain_openai import ChatOpenAI

llm = ChatOpenAI(temperature=0.4, model="gpt-4o-mini")

prompt = ChatPromptTemplate.from_messages([
    ("system",

     """
당신은 동화책 각색 작가입니다. 아래 제공된 각색된 동화 내용을 참고하여, 해당 내용을 창의적으로 계속 이어나가십시오.

# Requirements

- 이야기는 4개의 문단으로 이루어져야 합니다.
- 각 문단은  **필수문장 반드시 1문장** 포함해야 합니다.
- 각 문단은 200글자 내외로 작성되어야 합니다.

# Steps

1. 기존 각색 내용을 기반으로 스토리를 확장하십시오.
2. 필수문장을 각 문단에 자연스럽게 통합하십시오.
3. 문단을 구분하여 각 200글자 내외로 서술하십시오.

# Notes

- 필수문장을 매우 자연스럽게 통합하여 이야기를 방해하지 않도록 구성하십시오.
- 각 문단을 분리하여 표시하시고, 내용의 흐름이 논리적이고 매끄럽게 이어지도록 하십시오.
"""),
    ("human", """
제목: 아기돼지 삼형제
필수문장:
['첫번째 아기돼지는 구름으로 만든 집을 지었습니다.', '두번째 아기돼지는 깃털으로 만든 집을 지었습니다.',
    '세번째 아기돼지는 초콜릿으로 만든 집을 지었습니다.', '늑대는 아기돼지의 집을 망치로 무너뜨렸습니다.']
도입:
옛날 옛적에 아기돼지 삼형제가 살고 있었습니다. 이들은 각자 자신만의 집을 짓기로 결정했어요. 늑대는 첫째 돼지의 집에 와서 말했어요. "문을 열어라!"
     """),
    ("ai",
     """
1. "구름은 가볍고 부드러우니 금방 집을 지을 수 있을 거야!" 그는 솜사탕 같은 구름을 모아 집을 완성했습니다. 하지만 늑대가 찾아와 "문을 열어라!"라고 외쳤을 때, 첫째 돼지는 두려움에 떨었습니다. 늑대가 숨을 크게 들이마시고 불어버리자, 구름으로 만든 집은 순식간에 사라져 버렸습니다. 첫째 돼지는 형제들에게 달려가며 도움을 청했습니다. "형들, 늑대가 내 집을 날려버렸어!"
2. "깃털은 따뜻하고 포근하니까 안전할 거야!" 그는 새들의 깃털을 모아 아늑한 집을 만들었습니다. 그러나 늑대가 다시 찾아와 "문을 열어라!"라고 외쳤습니다. 두번째 돼지는 겁에 질렸지만, 깃털 집이 버텨주길 바랐습니다. 하지만 늑대가 또다시 강하게 불을 내뿜자, 깃털로 만든 집은 허공으로 흩어졌습니다. 두번째 돼지도 형제들에게 달려가며 외쳤습니다. "늑대가 내 집도 날려버렸어!"
3. "초콜릿은 단단하고 맛있으니까 늑대도 쉽게 부수지 못할 거야!" 그는 달콤한 초콜릿 벽돌로 튼튼한 집을 지었습니다. 늑대가 찾아와 "문을 열어라!"라고 외쳤지만, 세번째 돼지는 자신만만했습니다. 그러나 늑대는 이번엔 숨을 불지 않고, 아기돼지의 집을 망치로 무너뜨렸습니다. 초콜릿 조각들이 사방으로 흩어졌고, 세번째 돼지도 형제들과 함께 도망쳐야 했습니다. "우린 이제 어떻게 해야 하지?"
4. "이제 어떻게 해야 늑대에게서 안전할 수 있을까?" 그들은 서로의 실패를 교훈 삼아, 더 튼튼한 집을 짓기로 결심했습니다. 이번에는 벽돌과 시멘트를 사용해 단단한 집을 지었습니다. 늑대가 다시 찾아와 "문을 열어라!"라고 외쳤지만, 삼형제는 두려워하지 않았습니다. 늑대는 숨을 불어보기도 하고 망치를 휘둘러보기도 했지만, 집은 끄떡없었습니다. 결국 늑대는 포기하고 떠났고, 삼형제는 안전하게 행복하게 살 수 있었습니다. "함께라면 무엇이든 이겨낼 수 있어!"
 """),
    ("human", """
제목: {title}
필수문장:
{sentences}
도입:
{introduction}
"""),
])

chain = prompt | llm | NumberdListParser()
