server {
    listen 80;
    server_name i12c206.p.ssafy.io;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name i12c206.p.ssafy.io;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/i12c206.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/i12c206.p.ssafy.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;  

    # 프론트엔드 프록시 설정
    location / {
        proxy_pass http://frontend:3000;  # Docker Compose 서비스명 사용
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API 요청 프록시 설정
    location /api {
        proxy_pass http://backend:8080;  # 백엔드 서버 주소
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 필요한 경우 다른 경로도 설정
    # location /openvidu {
    #     proxy_pass http://openvidu:4443;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    # }
}
