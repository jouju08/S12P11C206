server {
    listen 443 ssl;
    server_name i12c206.p.ssafy.io;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/i12c206.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/i12c206.p.ssafy.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location ^~ /actuator {
        return 404;
    }

    # Openvidu 요청: 예를 들어 /api/openvidu
    location ^~ /api/openvidu {
        proxy_pass http://backend:8080;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location ^~ /api/ai {
        proxy_pass http://ai:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # API 요청: Spring Boot 백엔드
    location ^~ /api {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    
    location ^~ /ws {
        proxy_pass http://backend:8080;
        proxy_http_version 1.1;
    
        # WebSocket 연결을 위한 헤더 설정
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    
        proxy_ssl_verify off;
    }

    # SPA fallback 처리: 그 외의 모든 요청
    # 여기서 Nginx는 /usr/share/nginx/html 에 마운트된 React 빌드 산출물에서 파일을 찾습니다.
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }
}
